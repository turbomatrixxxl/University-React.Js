{"version":3,"file":"static/js/249.4b7c84c0.chunk.js","mappings":"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","sources":["webpack://university-react.js/./src/components/Modal/Modal.module.css?28d7","components/Modal/Modal.jsx","components/Modal/index.js","webpack://university-react.js/./src/components/common/Alert/Alert.module.css?1544","components/common/Alert/index.js","components/common/Alert/Alert.jsx","webpack://university-react.js/./src/components/common/MenuBlock/MenuBlock.module.css?3305","components/common/MenuBlock/index.js","components/common/MenuBlock/MenuBlock.jsx","webpack://university-react.js/./src/components/DeleteModal/DeleteModal.module.css?928a","components/DeleteModal/DeleteModal.jsx","components/DeleteModal/index.js","webpack://university-react.js/./src/components/common/InfoItemBlock/InfoItemBlock.module.css?a6ac","components/common/InfoItemBlock/index.js","components/common/InfoItemBlock/InfoItemBlock.jsx","webpack://university-react.js/./src/components/common/Input/Input.module.css?9b15","components/common/Input/Input.jsx","components/common/Input/index.js","webpack://university-react.js/./src/components/common/Loading/Loading.module.css?e10d","components/common/Loading/index.js","components/common/Loading/Loading.jsx","webpack://university-react.js/./src/components/main/University/University.module.css?c15f","components/main/University/University.jsx","components/main/University/index.js","webpack://university-react.js/./src/components/main/TutorsList/TutorsList.module.css?c0b3","components/main/TutorsList/Tutor/TutorItem.jsx","webpack://university-react.js/./src/components/cities/cities.module.css?1d5a","components/cities/index.js","components/cities/cities.jsx","webpack://university-react.js/./src/components/FacultieContent/FacultiesEdit/faculties.module.css?28a4","components/FacultieContent/FacultiesEdit/faculties.jsx","components/FacultieContent/FacultiesEdit/index.js","components/main/TutorsList/TutorsList.jsx","../node_modules/@uidotdev/usehooks/index.js","webpack://university-react.js/./src/pages/UniversitiesPage/University.module.css?7e92","pages/UniversitiesPage/UniversitiesPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"modalClassName\":\"Modal_modalClassName__CIH5r\",\"content\":\"Modal_content__gGb69\",\"closeModal\":\"Modal_closeModal__u8DGh\",\"pencil\":\"Modal_pencil__WSNld\",\"modalTitle\":\"Modal_modalTitle__JvsLa\",\"inputCont\":\"Modal_inputCont__utxjm\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HiX } from 'react-icons/hi';\nimport Input from 'components/common/Input';\nimport Button from 'components/common/Button';\n\nimport pencil from '../../images/school.png';\n\nimport styles from './Modal.module.css';\n\nfunction Modal({\n  isModalVisible,\n  handleModalClose,\n  handleChange,\n  handleSave,\n  dialogRef,\n  contRef,\n  label,\n  name,\n  value,\n}) {\n  if (!isModalVisible) {\n    return;\n  }\n\n  return (\n    isModalVisible && (\n      <dialog ref={dialogRef} className={styles.modalClassName}>\n        <div ref={contRef} className={styles.content}>\n          <button\n            className={styles.closeModal}\n            id=\"closeModal\"\n            onClick={handleModalClose}\n          >\n            <HiX size=\"24px\" />\n          </button>\n          <img className={styles.pencil} src={pencil} alt=\"pencil\" />\n          <p className={styles.modalTitle}>Edit {label} information</p>\n          <div className={styles.inputCont}>\n            <Input\n              handleChange={handleChange}\n              type={'text'}\n              label={label}\n              value={value}\n              name={name}\n              required={true}\n            />\n          </div>\n          <Button\n            handleClick={handleSave}\n            disabled={false}\n            type=\"submit\"\n            variant={'notActive'}\n          >\n            save\n          </Button>\n        </div>\n      </dialog>\n    )\n  );\n}\n\nModal.propTypes = {\n  isModalVisible: PropTypes.bool,\n  handleModalClose: PropTypes.func,\n  handleChange: PropTypes.func,\n  handleSave: PropTypes.func,\n  dialogRef: PropTypes.object,\n  contRef: PropTypes.object,\n  label: PropTypes.string,\n  name: PropTypes.string,\n  value: PropTypes.string,\n};\n\nexport default Modal;\n\n// export class Modal extends Component {\n//   static propTypes = {\n//     isModalVisible: PropTypes.bool.isRequired,\n//     handleModalClose: PropTypes.func.isRequired,\n//   };\n\n//   render() {\n//     const { isModalVisible, handleModalClose } = this.props;\n\n//     if (!isModalVisible) {\n//       return;\n//     }\n\n//     return (\n//       isModalVisible && (\n//         <dialog className={styles.modalClassName}>\n//           <div className={styles.content}>\n//             <button\n//               className={styles.closeModal}\n//               id=\"closeModal\"\n//               onClick={handleModalClose}\n//             >\n//               <HiX size=\"24px\" />\n//             </button>\n//             <img className={styles.pencil} src={pencil} alt=\"pencil\" />\n//             <p className={styles.modalTitle}>edit city information</p>\n//             <div className={styles.inputCont}>\n//               <Input\n//                 type={'text'}\n//                 label={'City'}\n//                 // value={city}\n//                 name=\"city\"\n//                 // handleChange={this.handleInviteButtonChange}\n//                 required={true}\n//               />\n//             </div>\n//             <Button disabled={false} type=\"submit\" variant={'notActive'}>\n//               save\n//             </Button>\n//           </div>\n//         </dialog>\n//       )\n//     );\n//   }\n// }\n\n// export default Modal;\n","import Modal from './Modal';\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nexport default {\"alert\":\"Alert_alert__njX-k\"};","import Alert from './Alert';\n\nexport default Alert;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Alert.module.css';\n\nexport default function Alert({ message }) {\n  return <p className={styles.alert}>{message}</p>;\n}\n\nAlert.propTypes = {\n  message: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"paper\":\"MenuBlock_paper__TYunY\",\"container\":\"MenuBlock_container__+mi2i\",\"edit\":\"MenuBlock_edit__5OA83\",\"button\":\"MenuBlock_button__T1yZy\",\"name\":\"MenuBlock_name__raZ5q\"};","import MenuBlock from './MenuBlock';\n\nexport default MenuBlock;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Paper from 'components/main/Paper';\n\nimport { HiPencilAlt, HiTrash } from 'react-icons/hi';\nimport clsx from 'clsx';\n\nimport styles from './MenuBlock.module.css';\n\nexport default function MenuBlock({ handleEdit, handleDelete, className }) {\n  return (\n    <Paper className={clsx(className, styles.paper)}>\n      <div className={clsx(styles.edit, styles.container)}>\n        <button onClick={handleEdit} className={styles.button}>\n          <HiPencilAlt />\n        </button>\n        <p className={styles.name}>Edit</p>\n      </div>\n      <div className={styles.container}>\n        <button onClick={handleDelete} className={styles.button}>\n          <HiTrash />\n        </button>\n        <p className={styles.name}>Delete</p>\n      </div>\n    </Paper>\n  );\n}\n\nMenuBlock.propTypes = {\n  handleEdit: PropTypes.func,\n  handleDelete: PropTypes.func,\n  className: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"modalClassName\":\"DeleteModal_modalClassName__3QM8i\",\"content\":\"DeleteModal_content__QdUWs\",\"closeModal\":\"DeleteModal_closeModal__8OLuQ\",\"fingerUp\":\"DeleteModal_fingerUp__XMKHp\",\"modalTitleWarningContainer\":\"DeleteModal_modalTitleWarningContainer__7-DMq\",\"modalTitle\":\"DeleteModal_modalTitle__KTKin\",\"modalDeleteWarning\":\"DeleteModal_modalDeleteWarning__yWZft\",\"buttonsContainer\":\"DeleteModal_buttonsContainer__vOKkV\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HiX } from 'react-icons/hi';\nimport Button from 'components/common/Button';\n\nimport fingerUp from '../../images/fingerUp.png';\n\nimport styles from './DeleteModal.module.css';\n\nfunction DeleteModal({\n  isDeleteModalVisible,\n  handleDeleteModalClose,\n  handleDeleteYes,\n  handleDeleteNo,\n  dialogDeleteRef,\n  contDeleteRef,\n  infoName,\n}) {\n  if (!isDeleteModalVisible) {\n    return;\n  }\n\n  return (\n    isDeleteModalVisible && (\n      <dialog ref={dialogDeleteRef} className={styles.modalClassName}>\n        <div ref={contDeleteRef} className={styles.content}>\n          <button\n            className={styles.closeModal}\n            id=\"closeModal\"\n            onClick={handleDeleteModalClose}\n          >\n            <HiX size=\"24px\" />\n          </button>\n          <img className={styles.fingerUp} src={fingerUp} alt=\"finger up\" />\n\n          <div className={styles.modalTitleWarningContainer}>\n            <p className={styles.modalTitle}>faculty removal</p>\n            <p className={styles.modalDeleteWarning}>\n              All materials and information about the {infoName} will be removed\n            </p>\n          </div>\n\n          <div className={styles.buttonsContainer}>\n            <Button\n              handleClick={handleDeleteNo}\n              disabled={false}\n              type=\"submit\"\n              variant={'secondary'}\n            >\n              No\n            </Button>\n            <Button\n              handleClick={handleDeleteYes}\n              disabled={false}\n              type=\"submit\"\n              variant={'notActive'}\n            >\n              Yes\n            </Button>\n          </div>\n        </div>\n      </dialog>\n    )\n  );\n}\n\nDeleteModal.propTypes = {\n  isDeleteModalVisible: PropTypes.bool,\n  handleDeleteModalClose: PropTypes.func,\n  handleDeleteYes: PropTypes.func,\n  handleDeleteNo: PropTypes.func,\n  dialogDeleteRef: PropTypes.object,\n  contDeleteRef: PropTypes.object,\n  infoName: PropTypes.string,\n};\n\nexport default DeleteModal;\n","import DeleteModal from './DeleteModal';\n\nexport default DeleteModal;\n","// extracted by mini-css-extract-plugin\nexport default {\"name\":\"InfoItemBlock_name__LCEF8\",\"button\":\"InfoItemBlock_button__+xL7o\",\"menu\":\"InfoItemBlock_menu__np9s-\"};","import InfoItemBlock from './InfoItemBlock';\n\nexport default InfoItemBlock;\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Paper from 'components/main/Paper';\nimport { BsThreeDotsVertical } from 'react-icons/bs';\n\nimport MenuBlock from '../MenuBlock';\nimport useToggle from 'hooks/useToggle';\nimport DeleteModal from 'components/DeleteModal';\nimport Modal from 'components/Modal';\nimport { useDispatch } from 'react-redux';\n\nimport styles from './InfoItemBlock.module.css';\n\nexport default function InfoItemBlock({\n  children,\n  id,\n  contDeleteRef,\n  dialogDeleteRef,\n  contRef,\n  dialogRef,\n  onDelete,\n  onEdit,\n  name,\n  value,\n  label,\n  className,\n  divClassName,\n}) {\n  const [isMenuVisible, toggleMenu] = useToggle(false);\n\n  const [isEditModalVisible, setIsEditModalVisible] = useState(false);\n  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);\n\n  const [newName, setNewName] = useState('');\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    document.body.addEventListener('keydown', handleKeyDown);\n    document.body.addEventListener('mousedown', handleClickOutside);\n\n    function handleKeyDown(event) {\n      // console.log(event.key);\n\n      if (event.key === 'Escape') {\n        handleModalClose();\n        handleDeleteModalClose();\n      }\n    }\n\n    function handleClickOutside(event) {\n      // console.log(event.target);\n\n      if (\n        event.target === dialogRef.current &&\n        event.target !== contRef.current\n      ) {\n        handleModalClose();\n      }\n      if (\n        event.target === dialogDeleteRef.current &&\n        event.target !== contDeleteRef.current\n      ) {\n        handleDeleteModalClose();\n      }\n    }\n\n    return () => {\n      // document.body.removeEventListener('keydown', handleKeyDown);\n      document.body.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [contDeleteRef, contRef, dialogDeleteRef, dialogRef]);\n\n  function handleModalClose() {\n    setIsEditModalVisible(false);\n    // toggleItemList();\n  }\n\n  function handleDeleteModalClose() {\n    setIsDeleteModalVisible(false);\n    // toggleItemList();\n  }\n\n  function handleOpenModal() {\n    setIsEditModalVisible(true);\n    // toggleItemList();\n\n    // console.log('open');\n  }\n\n  function handleOpenDeleteModal() {\n    setIsDeleteModalVisible(true);\n    // toggleItemList();\n\n    // console.log('open');\n  }\n\n  const handleToggle = () => {\n    toggleMenu();\n  };\n\n  function handleDeleteItem(itemId) {\n    dispatch(onDelete(itemId));\n  }\n\n  function handleEditItem() {\n    dispatch(onEdit({ id, name: newName }));\n  }\n\n  function handleEditInputChange(e) {\n    setNewName(e.target.value);\n  }\n\n  return (\n    <>\n      <DeleteModal\n        isDeleteModalVisible={isDeleteModalVisible}\n        handleDeleteModalClose={handleDeleteModalClose}\n        dialogDeleteRef={dialogDeleteRef}\n        contDeleteRef={contDeleteRef}\n        handleDeleteNo={() => {\n          handleDeleteModalClose();\n        }}\n        handleDeleteYes={() => {\n          handleDeleteItem(id);\n          handleDeleteModalClose();\n        }}\n      />\n      <Modal\n        name={name}\n        label={label}\n        value={value}\n        dialogRef={dialogRef}\n        contRef={contRef}\n        handleModalClose={handleModalClose}\n        isModalVisible={isEditModalVisible}\n        handleChange={handleEditInputChange}\n        handleSave={() => {\n          handleEditItem();\n\n          handleModalClose();\n        }}\n      />\n\n      <Paper className={className}>\n        <div className={divClassName}>\n          {children}\n          <button onClick={handleToggle} className={styles.button}>\n            <BsThreeDotsVertical />\n          </button>\n        </div>\n        {isMenuVisible && (\n          <MenuBlock\n            className={styles.menu}\n            handleDelete={() => {\n              handleOpenDeleteModal();\n              handleToggle();\n            }}\n            handleEdit={() => {\n              handleOpenModal();\n              handleToggle();\n            }}\n          />\n        )}\n      </Paper>\n    </>\n  );\n}\n\nInfoItemBlock.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.element,\n    PropTypes.string,\n    PropTypes.array,\n  ]),\n  id: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  contDeleteRef: PropTypes.object,\n  dialogDeleteRef: PropTypes.object,\n  contRef: PropTypes.object,\n  dialogRef: PropTypes.object,\n  onDelete: PropTypes.func,\n  onEdit: PropTypes.func,\n  name: PropTypes.string,\n  value: PropTypes.string,\n  label: PropTypes.string,\n  className: PropTypes.string,\n  divClassName: PropTypes.string,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"field\":\"Input_field__nN0SU\",\"input\":\"Input_input__wmxoC\",\"inputLabel\":\"Input_inputLabel__vwJzJ\",\"requiredIcon\":\"Input_requiredIcon__VgxxF\"};","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './Input.module.css';\n\nfunction Input({ label, name, type, value, handleChange, required }) {\n  return (\n    <div className={styles.field}>\n      <input\n        name={name}\n        className={styles.input}\n        onChange={handleChange}\n        defaultValue={value}\n        type={type}\n        required={required}\n      />\n      <label htmlFor={name} className={styles.inputLabel}>\n        {label}\n        <span className={styles.requiredIcon}>*</span>\n      </label>\n    </div>\n  );\n}\n\nInput.propTypes = {\n  label: PropTypes.string,\n  name: PropTypes.string,\n  type: PropTypes.string,\n  value: PropTypes.string,\n  handleChange: PropTypes.func,\n  required: PropTypes.bool,\n};\n\nexport default Input;\n","import Input from './Input';\n\nexport default Input;\n","// extracted by mini-css-extract-plugin\nexport default {\"loadingPage\":\"Loading_loadingPage__hjHZa\"};","import Loading from './Loading';\n\nexport default Loading;\n","import React from 'react';\n\nimport { Vortex } from 'react-loader-spinner';\n\nimport style from './Loading.module.css';\n\nexport default function Loading() {\n  return (\n    <div className={style.loadingPage}>\n      <div className={style.spinnerContainer}>\n        <Vortex\n          visible={true}\n          height=\"80\"\n          width=\"80\"\n          ariaLabel=\"vortex-loading\"\n          wrapperStyle={{}}\n          wrapperClass=\"vortex-wrapper\"\n          colors={['red', 'green', 'blue', 'yellow', 'orange', 'purple']}\n        />\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"University_section__SuRw5\",\"papers\":\"University_papers__JlozA\",\"mainContainer\":\"University_mainContainer__XJjIq\",\"image\":\"University_image__3yOmk\",\"name\":\"University_name__0F3YS\",\"title\":\"University_title__IVGqc\",\"iconsContainer\":\"University_iconsContainer__JDjow\",\"editButtons\":\"University_editButtons__j8+sg\",\"paperDescription\":\"University_paperDescription__WDVCT\"};","import React, { useEffect, useRef, useState } from 'react';\nimport Paper from '../Paper';\nimport sidebarSchoolImage from '../../../images/School@2x 1.png';\nimport { HiTrash } from 'react-icons/hi2';\nimport { HiPencilAlt } from 'react-icons/hi';\n\nimport styles from './University.module.css';\nimport Modal from 'components/Modal';\n\nfunction University() {\n  const [isModalVisible, setIsModalVisible] = useState(false);\n\n  const dialogRef = useRef();\n  const contRef = useRef();\n\n  useEffect(() => {\n    document.body.addEventListener('keydown', handleKeyDown);\n    document.body.addEventListener('mousedown', handleClickOutside);\n\n    function handleKeyDown(event) {\n      // console.log(event.key);\n\n      if (event.key === 'Escape') {\n        handleModalClose();\n      }\n    }\n\n    function handleClickOutside(event) {\n      // console.log(event.target);\n\n      if (\n        event.target === dialogRef.current &&\n        event.target !== contRef.current\n      ) {\n        handleModalClose();\n      }\n    }\n\n    return () => {\n      document.body.removeEventListener('keydown', handleKeyDown);\n      document.body.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, []);\n\n  function handleModalClose() {\n    setIsModalVisible(false);\n  }\n\n  function handleOpenModal() {\n    setIsModalVisible(true);\n\n    // console.log('open');\n  }\n\n  return (\n    <section className={styles.section}>\n      <Modal\n        dialogRef={dialogRef}\n        contRef={contRef}\n        handleModalClose={handleModalClose}\n        isModalVisible={isModalVisible}\n      />\n      <Paper className={styles.papers}>\n        <div className={styles.mainContainer}>\n          <img className={styles.image} src={sidebarSchoolImage} alt=\"School\" />\n          {/* alternativa din fisierul de imagini public */}\n          {/* <img\n                    src={`${process.env.PUBLIC_URL}/images/School@2x 1.png`}\n                    alt=\"School\"\n                  /> */}\n          <p className={styles.name}>university</p>\n          <h2 className={styles.title}>MIT</h2>\n        </div>\n        <div className={styles.iconsContainer}>\n          <button className={styles.editButtons} onClick={handleOpenModal}>\n            <HiPencilAlt />\n          </button>\n          <button className={styles.editButtons}>\n            <HiTrash />\n          </button>\n        </div>\n      </Paper>\n      <Paper className={styles.paperDescription}>\n        Experience, a concentration of knowledge and the ability to avoid most\n        recruiting mistakes. We know what most local and foreign companies want\n        and we can give it to you. And we are constantly improving our\n        programming courses, adding something new there. You can see the success\n        stories of our alumni for yourself to see the effectiveness of our\n        teaching methodology. Yes, we will start with the basics and the most\n        basic information. We know that most people come to us with zero\n        knowledge.\n      </Paper>\n    </section>\n  );\n}\n\nexport default University;\n\n// class University extends Component {\n//   state = {\n//     isModalVisible: false,\n//   };\n\n//   componentDidMount() {\n//     document.body.addEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   componentWillUnmount() {\n//     document.body.removeEventListener('keydown', this.handleKeyDown);\n//   }\n\n//   handleModalClose = () => {\n//     this.setState({ isModalVisible: false });\n//   };\n\n//   handleKeyDown = event => {\n//     // console.log(event.key);\n//     if (event.key === 'Escape') {\n//       this.handleModalClose();\n//     }\n//   };\n\n//   handleOpenModal = () => {\n//     this.setState({\n//       isModalVisible: true,\n//     });\n//     // console.log('open');\n//   };\n\n//   render() {\n//     return (\n//       <section className={styles.section}>\n//         <Modal\n//           handleModalClose={this.handleModalClose}\n//           isModalVisible={this.state.isModalVisible}\n//         />\n//         <Paper className={styles.papers}>\n//           <div className={styles.mainContainer}>\n//             <img\n//               className={styles.image}\n//               src={sidebarSchoolImage}\n//               alt=\"School\"\n//             />\n//             {/* alternativa din fisierul de imagini public */}\n//             {/* <img\n//                     src={`${process.env.PUBLIC_URL}/images/School@2x 1.png`}\n//                     alt=\"School\"\n//                   /> */}\n//             <p className={styles.name}>university</p>\n//             <h2 className={styles.title}>MIT</h2>\n//           </div>\n//           <div className={styles.iconsContainer}>\n//             <button\n//               className={styles.editButtons}\n//               onClick={this.handleOpenModal}\n//             >\n//               <HiPencilAlt />\n//             </button>\n//             <button className={styles.editButtons}>\n//               <HiTrash />\n//             </button>\n//           </div>\n//         </Paper>\n//         <Paper className={styles.paperDescription}>\n//           Experience, a concentration of knowledge and the ability to avoid most\n//           recruiting mistakes. We know what most local and foreign companies\n//           want and we can give it to you. And we are constantly improving our\n//           programming courses, adding something new there. You can see the\n//           success stories of our alumni for yourself to see the effectiveness of\n//           our teaching methodology. Yes, we will start with the basics and the\n//           most basic information. We know that most people come to us with zero\n//           knowledge.\n//         </Paper>\n//       </section>\n//     );\n//   }\n// }\n\n// export default University;\n","import University from './University';\n\nexport default University;\n","// extracted by mini-css-extract-plugin\nexport default {\"formSection\":\"TutorsList_formSection__dJq6Y\",\"listContainer\":\"TutorsList_listContainer__jYwIF\",\"searchThermInput\":\"TutorsList_searchThermInput__XDf2f\",\"list\":\"TutorsList_list__UZp4c\",\"listItem\":\"TutorsList_listItem__0HKQx\",\"listItemName\":\"TutorsList_listItemName__zXNgR\",\"listItemDetailsCont\":\"TutorsList_listItemDetailsCont__ovqcE\",\"listItemDetailCont\":\"TutorsList_listItemDetailCont__b8DEs\",\"listItemDetailIcon\":\"TutorsList_listItemDetailIcon__ueKTA\",\"listItemDetail\":\"TutorsList_listItemDetail__QVCiJ\",\"listItemDescription\":\"TutorsList_listItemDescription__Lvea6\",\"plus\":\"TutorsList_plus__FFxnK\",\"formsContainer\":\"TutorsList_formsContainer__m5IbA\",\"formHeading\":\"TutorsList_formHeading__Cq+Gh\",\"buttonTrashlIconContainer\":\"TutorsList_buttonTrashlIconContainer__udXqQ\",\"svg\":\"TutorsList_svg__rOJFj\",\"inviteButton\":\"TutorsList_inviteButton__0+UIS\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { HiDeviceMobile, HiLocationMarker, HiMail } from 'react-icons/hi';\n\nimport styles from '../TutorsList.module.css';\nimport { HiTrash } from 'react-icons/hi2';\nimport Button from 'components/common/Button';\n\nfunction TutorItem({ item, handleDelete }) {\n  return (\n    <li className={styles.listItem} key={item.id}>\n      <div\n        className={styles.listItemName}\n      >{`${item.firstName} ${item.lastName}`}</div>\n      <div className={styles.listItemDetailsCont}>\n        <div className={styles.listItemDetailCont}>\n          <span className={styles.listItemDetailIcon}>\n            <HiDeviceMobile />\n          </span>\n          <span className={styles.listItemDetail}>{item.phone}</span>\n        </div>\n        <div className={styles.listItemDetailCont}>\n          <span className={styles.listItemDetailIcon}>\n            <HiMail />\n          </span>\n          <span className={styles.listItemDetail}>{item.email}</span>\n        </div>\n\n        <div className={styles.listItemDetailCont}>\n          <span className={styles.listItemDetailIcon}>\n            <HiLocationMarker />\n          </span>\n          <span className={styles.listItemDetail}>{item.city}</span>\n        </div>\n      </div>\n      <div className={styles.listItemDescription}>\n        {item.options ? item.options : null}\n      </div>\n      <span className={styles.buttonTrashlIconContainer}>\n        <Button\n          type=\"button\"\n          disabled={false}\n          handleClick={handleDelete}\n          variant=\"icon\"\n        >\n          <HiTrash className={styles.svg} />\n        </Button>\n      </span>\n    </li>\n  );\n}\n\nTutorItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  handleDelete: PropTypes.func,\n};\n\nexport default TutorItem;\n","// extracted by mini-css-extract-plugin\nexport default {\"citiesSection\":\"cities_citiesSection__CUhLS\",\"citiesTitleContainer\":\"cities_citiesTitleContainer__3Oujw\",\"citiesTitleIconContainer\":\"cities_citiesTitleIconContainer__bnJPe\",\"citiesTitle\":\"cities_citiesTitle__0FfAs\",\"citiesContainer\":\"cities_citiesContainer__GfwMR\",\"citiesListItem\":\"cities_citiesListItem__XCEPl\",\"formSection\":\"cities_formSection__NYHVb\",\"formsContainer\":\"cities_formsContainer__4cxoV\",\"formHeading\":\"cities_formHeading__V-CJ0\",\"paper\":\"cities_paper__Es4br\",\"info\":\"cities_info__Tr0rY\"};","import Cities from './cities';\n\nexport default Cities;\n","import Button from 'components/common/Button';\nimport React, { useRef, useState } from 'react';\nimport { HiPlus } from 'react-icons/hi';\nimport citiesIcon from '../../images/citiesIcon.png';\nimport useToggle from 'hooks/useToggle';\n\nimport Input from 'components/common/Input';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getCities } from '../../redux/selectors';\nimport { addCity, deleteCity, editCity } from '../../redux/citiesSlice';\n\n// import Modal from 'components/Modal';\n// import { nanoid } from 'nanoid';\n// import DeleteModal from 'components/DeleteModal';\nimport InfoItemBlock from 'components/common/InfoItemBlock';\n\nimport styles from './cities.module.css';\n\nexport default function Cities() {\n  const [isFormVisible, toggleForm] = useToggle(false);\n  const [disabled, setIsDisabled] = useState(true);\n  const [newCity, setNewCity] = useState([]);\n  // const [editedCity, setEditedCity] = useState([]);\n\n  const dispatch = useDispatch();\n\n  const allCities = useSelector(getCities);\n\n  const dialogRef = useRef();\n  const contRef = useRef();\n  const dialogDeleteRef = useRef();\n  const contDeleteRef = useRef();\n\n  function handleAddButtonChange(ev) {\n    const { name, value } = ev.target;\n    if (value.length === 0) {\n      setIsDisabled(true);\n\n      return;\n    }\n    setNewCity({ [name]: value });\n    setIsDisabled(false);\n  }\n\n  function handleSubmit(ev) {\n    ev.preventDefault();\n\n    //* With redux\n    dispatch(addCity(newCity));\n\n    const form = ev.target;\n\n    form.reset();\n    toggleForm();\n    setNewCity([]);\n  }\n\n  // function handleEdit(ev) {\n  //   setEditedCity({\n  //     id: nanoid(),\n  //     name: ev.target.value,\n  //   });\n  //   // console.log(editedCity);\n  //   // console.log(ev.target.value);\n  // }\n\n  return (\n    <section className={styles.citiesSection}>\n      <div className={styles.citiesTitleContainer}>\n        <div className={styles.citiesTitleIconContainer}>\n          <img className={styles.citiesTitleIcon} src={citiesIcon} alt=\"Pin\" />\n        </div>\n        <h1 className={styles.citiesTitle}>cities</h1>\n      </div>\n      <ul className={styles.citiesContainer}>\n        {allCities.map(city => {\n          return (\n            <li className={styles.citiesListItem} key={city.id}>\n              {/* <DeleteModal\n                isDeleteModalVisible={isDeleteModalVisible}\n                handleDeleteModalClose={handleDeleteModalClose}\n                dialogDeleteRef={dialogDeleteRef}\n                contDeleteRef={contDeleteRef}\n                handleDeleteNo={handleDeleteModalClose}\n                handleDeleteYes={() => {\n                  dispatch(deleteCity(city.id));\n                  handleDeleteModalClose();\n                }}\n              />\n              <Modal\n                name={city.name}\n                label=\"City\"\n                dialogRef={dialogRef}\n                contRef={contRef}\n                handleModalClose={handleModalClose}\n                isModalVisible={isModalVisible}\n                handleChange={handleEdit}\n                handleSave={() => {\n                  console.log(city);\n\n                  dispatch(editCity(city.id, editedCity.name));\n                  //   console.log(allCities);\n\n                  handleModalClose();\n                }}\n              /> */}\n              <InfoItemBlock\n                id={city.id}\n                contDeleteRef={contDeleteRef}\n                dialogDeleteRef={dialogDeleteRef}\n                contRef={contRef}\n                dialogRef={dialogRef}\n                onDelete={deleteCity}\n                onEdit={editCity}\n                name=\"name\"\n                label=\"City\"\n                value={city.name}\n                className={styles.paper}\n                divClassName={styles.info}\n              >\n                {city.name}\n              </InfoItemBlock>\n            </li>\n          );\n        })}\n      </ul>\n      {isFormVisible && (\n        <section className={styles.formSection}>\n          <h1 className={styles.formHeading}>Adding a city</h1>\n\n          <form onSubmit={handleSubmit} className={styles.formsContainer}>\n            <Input\n              type={'text'}\n              label={'City'}\n              value={newCity.name}\n              name=\"name\"\n              handleChange={handleAddButtonChange}\n              required={true}\n            />\n            <Button disabled={disabled} type=\"submit\" variant={'notActive'}>\n              add\n            </Button>\n          </form>\n        </section>\n      )}\n      <Button type=\"button\" handleClick={toggleForm}>\n        <span className={styles.plus}>\n          <HiPlus />\n        </span>{' '}\n        Add City\n      </Button>\n    </section>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"citiesSection\":\"faculties_citiesSection__x5Gb-\",\"citiesTitleContainer\":\"faculties_citiesTitleContainer__yaumD\",\"citiesTitleIconContainer\":\"faculties_citiesTitleIconContainer__xOSJ8\",\"citiesTitle\":\"faculties_citiesTitle__U5y06\",\"citiesContainer\":\"faculties_citiesContainer__yK+T9\",\"citiesListItem\":\"faculties_citiesListItem__dEo24\",\"formSection\":\"faculties_formSection__YX4r2\",\"formsContainer\":\"faculties_formsContainer__xBd78\",\"formHeading\":\"faculties_formHeading__zyyuP\",\"name\":\"faculties_name__Q0+0l\",\"paper\":\"faculties_paper__sbSNY\",\"info\":\"faculties_info__8XsSZ\"};","import Button from 'components/common/Button';\nimport React, { useRef, useState } from 'react';\nimport { HiPlus } from 'react-icons/hi';\nimport robotEmoji from '../../../images/🤖 Robot Emoji.png';\nimport useToggle from 'hooks/useToggle';\n\nimport Input from 'components/common/Input';\n\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectFaculties,\n  selectFacultiesError,\n  selectFacultiestLoading,\n} from '../../../redux/selectors';\n\nimport {\n  addFaculty,\n  deleteFaculty,\n  editFaculty,\n} from '../../../redux/operations';\n\nimport Loading from 'components/common/Loading';\nimport Alert from 'components/common/Alert';\nimport InfoItemBlock from 'components/common/InfoItemBlock';\n\nimport styles from './faculties.module.css';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst INITIAL_FORM_VALUE = {\n  name: '',\n  description: '',\n  history: '',\n};\n\nexport default function Faculties() {\n  const [isFormVisible, toggleForm] = useToggle(false);\n  const [disabled, setIsDisabled] = useState(true);\n  const [newFaculty, setNewfaculty] = useState({ ...INITIAL_FORM_VALUE });\n\n  const location = useLocation();\n\n  const dispatch = useDispatch();\n\n  const allFaculties = useSelector(selectFaculties);\n\n  const loadingThunk = useSelector(selectFacultiestLoading);\n  const errorThunk = useSelector(selectFacultiesError);\n\n  const dialogRef = useRef();\n  const contRef = useRef();\n  const dialogDeleteRef = useRef();\n  const contDeleteRef = useRef();\n\n  function handleAddButtonChange(ev) {\n    const { name, value } = ev.target;\n\n    if (value.length === 0) {\n      setIsDisabled(true);\n\n      return;\n    }\n    setNewfaculty({ ...newFaculty, [name]: value });\n    console.log(newFaculty);\n\n    setIsDisabled(false);\n  }\n\n  function handleSubmit(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n\n    //* With redux\n    dispatch(addFaculty(newFaculty));\n\n    form.reset();\n    setNewfaculty(INITIAL_FORM_VALUE);\n    toggleForm();\n  }\n\n  return (\n    <section className={styles.citiesSection}>\n      <div className={styles.citiesTitleContainer}>\n        <div className={styles.citiesTitleIconContainer}>\n          <img\n            className={styles.citiesTitleIcon}\n            src={robotEmoji}\n            alt=\"robot emoji\"\n          />\n        </div>\n        <h1 className={styles.citiesTitle}>faculties</h1>\n      </div>\n      <ul className={styles.citiesContainer}>\n        {loadingThunk && <Loading />}\n\n        {errorThunk && <Alert message={errorThunk} />}\n\n        {allFaculties.map(faculty => {\n          // console.log(faculty.name);\n          // console.log(faculty.id);\n\n          return (\n            <li className={styles.citiesListItem} key={faculty.id}>\n              <InfoItemBlock\n                id={faculty.id}\n                contDeleteRef={contDeleteRef}\n                dialogDeleteRef={dialogDeleteRef}\n                contRef={contRef}\n                dialogRef={dialogRef}\n                onDelete={deleteFaculty}\n                onEdit={editFaculty}\n                name=\"name\"\n                label=\"Faculty\"\n                value={faculty.name}\n                className={styles.paper}\n                divClassName={styles.info}\n              >\n                <Link\n                  to={`faculties/${faculty.name}`}\n                  state={{ from: location }}\n                >\n                  <p className={styles.name}>{faculty.name}</p>\n                </Link>{' '}\n              </InfoItemBlock>\n            </li>\n          );\n        })}\n      </ul>\n      {isFormVisible && (\n        <section className={styles.formSection}>\n          <h1 className={styles.formHeading}>Adding a faculty</h1>\n\n          <form onSubmit={handleSubmit} className={styles.formsContainer}>\n            <Input\n              type={'text'}\n              label={'Faculty'}\n              value={newFaculty.name}\n              name=\"name\"\n              handleChange={handleAddButtonChange}\n              required={true}\n            />\n            <Input\n              type={'text'}\n              label={'Description'}\n              value={newFaculty.description}\n              name=\"description\"\n              handleChange={handleAddButtonChange}\n              required={true}\n            />\n            <Input\n              type={'text'}\n              label={'History'}\n              value={newFaculty.history}\n              name=\"history\"\n              handleChange={handleAddButtonChange}\n              required={true}\n            />\n            <Button disabled={disabled} type=\"submit\" variant={'notActive'}>\n              add\n            </Button>\n          </form>\n        </section>\n      )}\n      <Button type=\"button\" handleClick={toggleForm}>\n        <span className={styles.plus}>\n          <HiPlus />\n        </span>{' '}\n        Add Faculty\n      </Button>\n    </section>\n  );\n}\n","import Faculties from './faculties';\n\nexport default Faculties;\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TutorItem from './Tutor/TutorItem';\nimport Input from 'components/common/Input';\nimport Button from 'components/common/Button';\nimport axios from 'axios';\nimport Loading from 'components/common/Loading';\nimport Alert from 'components/common/Alert';\nimport { HiPlus } from 'react-icons/hi';\nimport useToggle from 'hooks/useToggle';\nimport { useDebounce } from '@uidotdev/usehooks';\nimport { useSelector, useDispatch } from 'react-redux';\n\n//! with redux\n// import { addTutor, deleteTutor } from '../../../redux/tutors/actions';\n\n//? with toolkit\n// import { addTutor, deleteTutor } from '../../../redux/tutors/tutorsSlice';\n\n// * cu asynkThunk\nimport { getTutors, getLoading, getError } from '../../../redux/selectors';\nimport { addTutor, deleteTutor } from '../../../redux/operations';\n\nimport Cities from 'components/cities';\n// import FacultieContent from 'components/FacultieContent/FacultieContent';\nimport Faculties from 'components/FacultieContent/FacultiesEdit';\n\nimport styles from './TutorsList.module.css';\n\n// import data from '../../../utils/data.json';\n\naxios.defaults.baseURL = 'http://localhost:3001';\n\nconst INITIAL_FORM_VALUE = {\n  firstName: '',\n  lastName: '',\n  phone: '',\n  email: '',\n  city: '',\n};\n\nfunction TutorsList() {\n  const [searchTherm, setSearchTherm] = useState('');\n  const debouncedSearchTerm = useDebounce(searchTherm, 1000);\n\n  // const [tutors, setTutors] = useState([]);\n\n  //! Without hook\n  // const [isFormVisible, setIsFormVisible] = useState(false);\n\n  //! With persomalized hook\n  const [isFormVisible, toggleForm] = useToggle(false);\n\n  //! Without redux\n  // const [loading, setIsLoading] = useState(false);\n  const [disabled, setIsDisabled] = useState(true);\n  // const [error, setError] = useState(null);\n  const [newTutor, setNewTutor] = useState(INITIAL_FORM_VALUE);\n\n  // ! with toolkit\n  // const tutorsRedux = useSelector(getTutors);\n  // console.log(tutorsRedux);\n\n  // * with asyncThunk\n  const tutorsThunk = useSelector(getTutors);\n  // console.log(tutorsThunk);\n\n  const LoadingThunk = useSelector(getLoading);\n  const errorThunk = useSelector(getError);\n\n  const dispatch = useDispatch();\n\n  //! Without redux and from json server\n  // useEffect(() => {\n  //   const fetchData = async () => {\n  //     try {\n  //       setIsLoading(true);\n  //       const response = await axios.get('/tutors');\n  //       // console.log(response.data);\n\n  //       const tutorsFromServer = response.data;\n  //       setTutors(tutorsFromServer);\n  //       setError(null);\n  //     } catch (error) {\n  //       console.log(error.message);\n  //       setError('Lista de tutori nu a fost gasita !');\n  //     } finally {\n  //       setIsLoading(false);\n  //     }\n  //   };\n\n  //   fetchData();\n  // }, []);\n\n  // !   !!! important !!!\n  // * with asyncThunk(moved to App to avoid rerendering)\n  // !   !!! important !!!\n  // useEffect(() => {\n  //   dispatch(fetchTutors());\n  //   console.log(tutorsThunk);\n  // }, [dispatch]);\n\n  // ! with toolkit\n  // useEffect(() => {\n  //   localStorage.setItem('tutors', JSON.stringify(tutorsRedux));\n  // }, [tutorsRedux]);\n\n  //! Without hook\n  // function toggleForm() {\n  //   setIsFormVisible(!isFormVisible);\n  // }\n\n  function handleChange(ev) {\n    // console.log(ev.target.value);\n\n    const { name, value } = ev.target;\n\n    setNewTutor({ ...newTutor, [name]: value });\n  }\n\n  function handleInviteButtonChange(ev) {\n    const { name, value } = ev.target;\n    if (value.length === 0) {\n      setIsDisabled(true);\n\n      return;\n    }\n    setNewTutor({ ...newTutor, [name]: value });\n    setIsDisabled(false);\n  }\n\n  //! Without redux and from json server\n  // async function addTutor(ev) {\n  //   const isExist = tutorsRedux.filter(tutor => {\n  //     const name = newTutor.lastName.includes(tutor.lastName);\n  //     const surname = newTutor.firstName.includes(tutor.firstName);\n\n  //     return name && surname;\n  //   });\n\n  //   try {\n  //     if (isExist.length > 0) {\n  //       alert('This name is already in the list !');\n\n  //       setIsDisabled(true);\n\n  //       ev.target.reset();\n  //       return;\n  //     }\n\n  //     // console.log(isExist);\n\n  //     const response = await axios.post('/tutors', newTutor);\n  //     // console.log(response.data);\n\n  //     setTutors([...tutors, response.data]);\n  //     setNewTutor(INITIAL_FORM_VALUE);\n  //     setIsDisabled(true);\n  //   } catch (error) {\n  //     setError('Tutorul nu a putut fi adaugat');\n\n  //     ev.target.reset();\n  //   }\n  // }\n\n  function handleSubmit(ev) {\n    ev.preventDefault();\n    //! Without redux and from json server\n    // addTutor(ev);\n\n    // With redux\n    dispatch(addTutor(newTutor));\n\n    const form = ev.target;\n\n    form.reset();\n    toggleForm();\n  }\n\n  // async function deleteTutor(id) {\n  //   try {\n  //     await axios.delete(`tutors/${id}`);\n  //     const tutorsLeft = tutors.filter(tutor => tutor.id !== id);\n  //     setTutors(tutorsLeft);\n  //   } catch (error) {\n  //     setError('Tutorul nu a putut fi sters !');\n  //   }\n  // }\n\n  // ! with toolkit\n  // function getTutorsCount() {\n  //   return tutorsRedux.length;\n  // }\n\n  // * wiyh asynkThunk\n  function getTutorsCount() {\n    return tutorsThunk.length;\n  }\n\n  function searchThermHandleChange(e) {\n    // console.log(e.target.value);\n\n    setSearchTherm(e.target.value);\n\n    // console.log(this.state.searchTherm);\n  }\n\n  // ! with toolkit\n  // const getTutorsBySearchTherm = tutorsRedux.filter(tutor => {\n  //   // const searchTherm = this.state.searchTherm;\n  //   const name = tutor.lastName;\n  //   const surName = tutor.firstName;\n  //   const isFound =\n  //     name.toLowerCase().includes(debouncedSearchTerm.toLowerCase()) ||\n  //     surName.toLowerCase().includes(debouncedSearchTerm.toLowerCase());\n  //   // console.log(isFound);\n\n  //   return isFound;\n  // });\n\n  // * wiyh asynkThunk\n  const getTutorsBySearchTherm = tutorsThunk.filter(tutor => {\n    // const searchTherm = this.state.searchTherm;\n    const name = tutor.lastName;\n    const surName = tutor.firstName;\n    const isFound =\n      name.toLowerCase().includes(debouncedSearchTerm.toLowerCase()) ||\n      surName.toLowerCase().includes(debouncedSearchTerm.toLowerCase());\n    // console.log(isFound);\n\n    return isFound;\n  });\n\n  async function delTutor(id) {\n    return dispatch(deleteTutor(id));\n  }\n\n  return (\n    <div className={styles.listContainer}>\n      <p>Search for Tutor:</p>\n      <input\n        onChange={searchThermHandleChange}\n        className={styles.searchThermInput}\n        type=\"text\"\n        name=\"searchTherm\"\n        value={searchTherm}\n      />\n\n      <div>\n        <ul className={styles.list}>\n          {/* {loading && <Loading />} */}\n          {LoadingThunk && <Loading />}\n\n          {/* {error && <Alert message={error} />} */}\n          {errorThunk && <Alert message={errorThunk} />}\n\n          {getTutorsBySearchTherm.map(tutor => {\n            return (\n              <TutorItem\n                key={tutor.id}\n                item={tutor}\n                // handleDelete={() => {\n                //   deleteTutor(tutor.id);\n                // }}\n                handleDelete={() => delTutor(tutor.id)}\n              />\n            );\n          })}\n        </ul>\n      </div>\n\n      <p>Number of Tutors found {getTutorsBySearchTherm.length}</p>\n\n      <p>Number of all Tutors {getTutorsCount()}</p>\n\n      {isFormVisible && (\n        <section className={styles.formSection}>\n          <h1 className={styles.formHeading}>Adding a tutor</h1>\n\n          <form onSubmit={handleSubmit} className={styles.formsContainer}>\n            <Input\n              type={'text'}\n              label={'Surname'}\n              value={newTutor.surname}\n              name=\"firstName\"\n              handleChange={handleChange}\n              required={true}\n            />\n            <Input\n              type={'text'}\n              label={'Name'}\n              value={newTutor.name}\n              name=\"lastName\"\n              handleChange={handleChange}\n              required={true}\n            />\n            <Input\n              type={'tel'}\n              label={'Phone number'}\n              value={newTutor.phone}\n              name=\"phone\"\n              pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n              title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n              handleChange={handleChange}\n              required={true}\n            />\n            <Input\n              type={'email'}\n              label={'Email'}\n              value={newTutor.email}\n              name=\"email\"\n              handleChange={handleChange}\n              required={true}\n            />\n            <Input\n              type={'text'}\n              label={'City'}\n              value={newTutor.city}\n              name=\"city\"\n              handleChange={handleInviteButtonChange}\n              required={true}\n            />\n            <Button\n              className={styles.inviteButton}\n              disabled={disabled}\n              type=\"submit\"\n              variant={'notActive'}\n            >\n              invite\n            </Button>\n          </form>\n        </section>\n      )}\n      <Button type=\"button\" handleClick={toggleForm}>\n        <span className={styles.plus}>\n          <HiPlus />\n        </span>{' '}\n        Add Tutor\n      </Button>\n\n      <Cities />\n\n      <Faculties />\n    </div>\n  );\n}\n\nTutorsList.propTypes = {\n  tutors: PropTypes.array,\n  tutor: PropTypes.object,\n  Surname: PropTypes.string,\n  Name: PropTypes.string,\n  Phone: PropTypes.number,\n  Email: PropTypes.string,\n  City: PropTypes.string,\n};\n\nexport default TutorsList;\n\n// const INITIAL_FORM_VALUE = {\n//   firstName: '',\n//   lastName: '',\n//   phone: '',\n//   email: '',\n//   city: '',\n// };\n\n// const INITIAL_STATE = {\n//   searchTherm: '',\n//   tutors: [],\n//   isFormVisible: false,\n//   loading: false,\n//   disabled: true,\n//   error: null,\n//   newTutor: { ...INITIAL_FORM_VALUE },\n// };\n// class TutorsList extends React.Component {\n//   // static defaultProps = {\n//   //   tutors: '',\n//   // };\n//   // !!! nu e nevoie de props !!!\n\n//   static propTypes = {\n//   tutors: PropTypes.array,\n//   tutor: PropTypes.object,\n//   Surname: PropTypes.string,\n//   Name: PropTypes.string,\n//   Phone: PropTypes.number,\n//   Email: PropTypes.string,\n//   City: PropTypes.string,\n// };\n\n//   state = {\n//     ...INITIAL_STATE,\n//   };\n\n//   async componentDidMount() {\n//     try {\n//       this.setState({ loading: true });\n//       const response = await axios.get('/tutors');\n//       // console.log(response.data);\n\n//       const tutorsFromServer = response.data;\n\n//       this.setState({\n//         tutors: tutorsFromServer,\n//         error: null,\n//       });\n//     } catch (error) {\n//       console.log(error.message);\n\n//       this.setState({\n//         error: 'Lista de tutori nu a fost gasita !',\n//       });\n//     } finally {\n//       this.setState({ loading: false });\n//     }\n\n//     // const dataLocStorageTutors = JSON.parse(localStorage.getItem('tutors'));\n//     // console.log(tutors);\n\n//     // console.log(this.state);\n//   }\n\n//   // componentDidUpdate() {\n//   //   localStorage.setItem('tutors', JSON.stringify(this.state.tutors));\n//   // }\n\n//   toggleForm = () => {\n//     this.setState({\n//       isFormVisible: !this.state.isFormVisible,\n//     });\n//   };\n\n//   handleChange = ev => {\n//     // console.log(ev.target.value);\n\n//     const { name, value } = ev.target;\n//     this.setState({\n//       ...this.state,\n//       newTutor: {\n//         ...this.state.newTutor,\n//         [name]: value,\n//       },\n//     });\n\n//     // console.log(this.state);\n//   };\n\n//   handleInviteButtonChange = ev => {\n//     const { name, value } = ev.target;\n//     if (value.length === 0) {\n//       this.setState({ disabled: true });\n//       return;\n//     }\n//     this.setState({\n//       ...this.state,\n//       newTutor: { ...this.state.newTutor, [name]: value },\n\n//       disabled: false,\n//     });\n//   };\n\n//   async addTutor(ev) {\n//     const isExist = this.state.tutors.filter(tutor => {\n//       const name = this.state.newTutor.lastName.includes(tutor.lastName);\n//       const surname = this.state.newTutor.firstName.includes(tutor.firstName);\n\n//       return name && surname;\n//     });\n\n//     try {\n//       if (isExist.length > 0) {\n//         alert('This name is already in the list !');\n\n//         this.setState({ ...this.state, disabled: true });\n\n//         ev.target.reset();\n//         return;\n//       }\n\n//       // console.log(isExist);\n\n//       const response = await axios.post('/tutors', this.state.newTutor);\n//       // console.log(response.data);\n\n//       this.setState({\n//         ...this.state,\n//         tutors: [...this.state.tutors, response.data],\n//         newTutor: { INITIAL_FORM_VALUE },\n//         disabled: true,\n//       });\n//     } catch (error) {\n//       this.setState({ error: 'Tutorul nu a putut fi adaugat' });\n//     }\n//   }\n\n//   handleSubmit = ev => {\n//     ev.preventDefault();\n\n//     this.addTutor(ev);\n\n//     const form = ev.target;\n//     form.reset();\n//   };\n\n//   async deleteTutor(id) {\n//     try {\n//       await axios.delete(`tutors/${id}`);\n//       const tutorsLeft = this.state.tutors.filter(tutor => tutor.id !== id);\n//       this.setState({\n//         ...this.state,\n//         tutors: [...tutorsLeft],\n//       });\n//     } catch (error) {\n//       this.setState({ ...this.state, error: 'Tutorul nu a putut fi sters !' });\n//     }\n//   }\n\n//   getTutorsCount = () => {\n//     return this.state.tutors.length;\n//   };\n\n//   searchThermHandleChange = e => {\n//     // console.log(e.target.value);\n\n//     this.setState({ ...this.state, searchTherm: e.target.value });\n\n//     // console.log(this.state.searchTherm);\n//   };\n\n//   render() {\n//     const { name, surname, phone, email, city } = this.state.newTutor;\n//     const { loading, error, disabled, tutors, searchTherm } = this.state;\n//     // console.log(tutors);\n\n//     const getTutorsBySearchTherm = tutors.filter(tutor => {\n//       // const searchTherm = this.state.searchTherm;\n//       const name = tutor.lastName;\n//       const surName = tutor.firstName;\n//       const isFound =\n//         name.toLowerCase().includes(searchTherm.toLowerCase()) ||\n//         surName.toLowerCase().includes(searchTherm.toLowerCase());\n//       // console.log(isFound);\n\n//       return isFound;\n//     });\n\n//     return (\n//       <div className={styles.listContainer}>\n//         <p>Search for Tutor:</p>\n//         <input\n//           onChange={this.searchThermHandleChange}\n//           className={styles.searchThermInput}\n//           type=\"text\"\n//           name=\"searchTherm\"\n//           value={searchTherm}\n//         />\n\n//         <div>\n//           <ul className={styles.list}>\n//             {loading && <Loading />}\n\n//             {error && <Alert message={error} />}\n\n//             {getTutorsBySearchTherm.map(tutor => {\n//               return (\n//                 <TutorItem\n//                   key={tutor.id}\n//                   item={tutor}\n//                   handleDelete={() => {\n//                     this.deleteTutor(tutor.id);\n//                   }}\n//                 />\n//               );\n//             })}\n//           </ul>\n//         </div>\n\n//         <p>Number of Tutors found {getTutorsBySearchTherm.length}</p>\n\n//         <p>Number of all Tutors {this.getTutorsCount()}</p>\n\n//         {this.state.isFormVisible && (\n//           <section className={styles.formSection}>\n//             <h1 className={styles.formHeading}>Adding a tutor</h1>\n\n//             <form\n//               onSubmit={this.handleSubmit}\n//               className={styles.formsContainer}\n//             >\n//               <Input\n//                 type={'text'}\n//                 label={'Surname'}\n//                 value={surname}\n//                 name=\"firstName\"\n//                 handleChange={this.handleChange}\n//                 required={true}\n//               />\n//               <Input\n//                 type={'text'}\n//                 label={'Name'}\n//                 value={name}\n//                 name=\"lastName\"\n//                 handleChange={this.handleChange}\n//                 required={true}\n//               />\n//               <Input\n//                 type={'tel'}\n//                 label={'Phone number'}\n//                 value={phone}\n//                 name=\"phone\"\n//                 pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n//                 title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n//                 handleChange={this.handleChange}\n//                 required={true}\n//               />\n//               <Input\n//                 type={'email'}\n//                 label={'Email'}\n//                 value={email}\n//                 name=\"email\"\n//                 handleChange={this.handleChange}\n//                 required={true}\n//               />\n//               <Input\n//                 type={'text'}\n//                 label={'City'}\n//                 value={city}\n//                 name=\"city\"\n//                 handleChange={this.handleInviteButtonChange}\n//                 required={true}\n//               />\n//               <Button disabled={disabled} type=\"submit\" variant={'notActive'}>\n//                 invite\n//               </Button>\n//             </form>\n//           </section>\n//         )}\n//         <Button type=\"button\" handleClick={this.toggleForm}>\n//           <span className={styles.plus}>\n//             <HiPlus />\n//           </span>{' '}\n//           Add Tutor\n//         </Button>\n//       </div>\n//     );\n//   }\n// }\n\n// export default TutorsList;\n","import * as React from \"react\";\n\nfunction isShallowEqual(object1, object2) {\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (let key of keys1) {\n    if (object1[key] !== object2[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isTouchEvent({ nativeEvent }) {\n  return window.TouchEvent\n    ? nativeEvent instanceof TouchEvent\n    : \"touches\" in nativeEvent;\n}\n\nfunction isMouseEvent(event) {\n  return event.nativeEvent instanceof MouseEvent;\n}\n\nfunction throttle(cb, ms) {\n  let lastTime = 0;\n  return () => {\n    const now = Date.now();\n    if (now - lastTime >= ms) {\n      cb();\n      lastTime = now;\n    }\n  };\n}\n\nfunction isPlainObject(value) {\n  return Object.prototype.toString.call(value) === \"[object Object]\";\n}\n\nfunction dispatchStorageEvent(key, newValue) {\n  window.dispatchEvent(new StorageEvent(\"storage\", { key, newValue }));\n}\n\nexport function useBattery() {\n  const [state, setState] = React.useState({\n    supported: true,\n    loading: true,\n    level: null,\n    charging: null,\n    chargingTime: null,\n    dischargingTime: null,\n  });\n\n  React.useEffect(() => {\n    if (!navigator.getBattery) {\n      setState((s) => ({\n        ...s,\n        supported: false,\n        loading: false,\n      }));\n      return;\n    }\n\n    let battery = null;\n\n    const handleChange = () => {\n      setState({\n        supported: true,\n        loading: false,\n        level: battery.level,\n        charging: battery.charging,\n        chargingTime: battery.chargingTime,\n        dischargingTime: battery.dischargingTime,\n      });\n    };\n\n    navigator.getBattery().then((b) => {\n      battery = b;\n      handleChange();\n\n      b.addEventListener(\"levelchange\", handleChange);\n      b.addEventListener(\"chargingchange\", handleChange);\n      b.addEventListener(\"chargingtimechange\", handleChange);\n      b.addEventListener(\"dischargingtimechange\", handleChange);\n    });\n\n    return () => {\n      if (battery) {\n        battery.removeEventListener(\"levelchange\", handleChange);\n        battery.removeEventListener(\"chargingchange\", handleChange);\n        battery.removeEventListener(\"chargingtimechange\", handleChange);\n        battery.removeEventListener(\"dischargingtimechange\", handleChange);\n      }\n    };\n  }, []);\n\n  return state;\n}\n\nexport function useClickAway(cb) {\n  const ref = React.useRef(null);\n  const refCb = React.useRef(cb);\n\n  React.useLayoutEffect(() => {\n    refCb.current = cb;\n  });\n\n  React.useEffect(() => {\n    const handler = (e) => {\n      const element = ref.current;\n      if (element && !element.contains(e.target)) {\n        refCb.current(e);\n      }\n    };\n\n    document.addEventListener(\"mousedown\", handler);\n    document.addEventListener(\"touchstart\", handler);\n\n    return () => {\n      document.removeEventListener(\"mousedown\", handler);\n      document.removeEventListener(\"touchstart\", handler);\n    };\n  }, []);\n\n  return ref;\n}\n\nfunction oldSchoolCopy(text) {\n  const tempTextArea = document.createElement(\"textarea\");\n  tempTextArea.value = text;\n  document.body.appendChild(tempTextArea);\n  tempTextArea.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(tempTextArea);\n}\n\nexport function useCopyToClipboard() {\n  const [state, setState] = React.useState(null);\n\n  const copyToClipboard = React.useCallback((value) => {\n    const handleCopy = async () => {\n      try {\n        if (navigator?.clipboard?.writeText) {\n          await navigator.clipboard.writeText(value);\n          setState(value);\n        } else {\n          throw new Error(\"writeText not supported\");\n        }\n      } catch (e) {\n        oldSchoolCopy(value);\n        setState(value);\n      }\n    };\n\n    handleCopy();\n  }, []);\n\n  return [state, copyToClipboard];\n}\n\nexport function useCounter(startingValue = 0, options = {}) {\n  const { min, max } = options;\n\n  if (typeof min === \"number\" && startingValue < min) {\n    throw new Error(\n      `Your starting value of ${startingValue} is less than your min of ${min}.`\n    );\n  }\n\n  if (typeof max === \"number\" && startingValue > max) {\n    throw new Error(\n      `Your starting value of ${startingValue} is greater than your max of ${max}.`\n    );\n  }\n\n  const [count, setCount] = React.useState(startingValue);\n\n  const increment = React.useCallback(() => {\n    setCount((c) => {\n      const nextCount = c + 1;\n\n      if (typeof max === \"number\" && nextCount > max) {\n        return c;\n      }\n\n      return nextCount;\n    });\n  }, [max]);\n\n  const decrement = React.useCallback(() => {\n    setCount((c) => {\n      const nextCount = c - 1;\n\n      if (typeof min === \"number\" && nextCount < min) {\n        return c;\n      }\n\n      return nextCount;\n    });\n  }, [min]);\n\n  const set = React.useCallback(\n    (nextCount) => {\n      setCount((c) => {\n        if (typeof max === \"number\" && nextCount > max) {\n          return c;\n        }\n\n        if (typeof min === \"number\" && nextCount < min) {\n          return c;\n        }\n\n        return nextCount;\n      });\n    },\n    [max, min]\n  );\n\n  const reset = React.useCallback(() => {\n    setCount(startingValue);\n  }, [startingValue]);\n\n  return [\n    count,\n    {\n      increment,\n      decrement,\n      set,\n      reset,\n    },\n  ];\n}\n\nexport function useDebounce(value, delay) {\n  const [debouncedValue, setDebouncedValue] = React.useState(value);\n\n  React.useEffect(() => {\n    const handler = setTimeout(() => {\n      setDebouncedValue(value);\n    }, delay);\n\n    return () => {\n      clearTimeout(handler);\n    };\n  }, [value, delay]);\n\n  return debouncedValue;\n}\n\nexport function useDefault(initialValue, defaultValue) {\n  const [state, setState] = React.useState(initialValue);\n\n  if (typeof state === \"undefined\" || state === null) {\n    return [defaultValue, setState];\n  }\n\n  return [state, setState];\n}\n\nexport function useDocumentTitle(title) {\n  React.useEffect(() => {\n    document.title = title;\n  }, [title]);\n}\n\nexport function useFavicon(url) {\n  React.useEffect(() => {\n    let link = document.querySelector(`link[rel~=\"icon\"]`);\n\n    if (!link) {\n      link = document.createElement(\"link\");\n      link.type = \"image/x-icon\";\n      link.rel = \"icon\";\n      link.href = url;\n      document.head.appendChild(link);\n    } else {\n      link.href = url;\n    }\n  }, [url]);\n}\n\nexport function useGeolocation(options = {}) {\n  const [state, setState] = React.useState({\n    loading: true,\n    accuracy: null,\n    altitude: null,\n    altitudeAccuracy: null,\n    heading: null,\n    latitude: null,\n    longitude: null,\n    speed: null,\n    timestamp: null,\n    error: null,\n  });\n\n  const optionsRef = React.useRef(options);\n\n  React.useEffect(() => {\n    const onEvent = ({ coords, timestamp }) => {\n      setState({\n        loading: false,\n        timestamp,\n        latitude: coords.latitude,\n        longitude: coords.longitude,\n        altitude: coords.altitude,\n        accuracy: coords.accuracy,\n        altitudeAccuracy: coords.altitudeAccuracy,\n        heading: coords.heading,\n        speed: coords.speed,\n      });\n    };\n\n    const onEventError = (error) => {\n      setState((s) => ({\n        ...s,\n        loading: false,\n        error,\n      }));\n    };\n\n    navigator.geolocation.getCurrentPosition(\n      onEvent,\n      onEventError,\n      optionsRef.current\n    );\n\n    const watchId = navigator.geolocation.watchPosition(\n      onEvent,\n      onEventError,\n      optionsRef.current\n    );\n\n    return () => {\n      navigator.geolocation.clearWatch(watchId);\n    };\n  }, []);\n\n  return state;\n}\n\nconst initialUseHistoryStateState = {\n  past: [],\n  present: null,\n  future: [],\n};\n\nconst useHistoryStateReducer = (state, action) => {\n  const { past, present, future } = state;\n\n  if (action.type === \"UNDO\") {\n    return {\n      past: past.slice(0, past.length - 1),\n      present: past[past.length - 1],\n      future: [present, ...future],\n    };\n  } else if (action.type === \"REDO\") {\n    return {\n      past: [...past, present],\n      present: future[0],\n      future: future.slice(1),\n    };\n  } else if (action.type === \"SET\") {\n    const { newPresent } = action;\n\n    if (action.newPresent === present) {\n      return state;\n    }\n\n    return {\n      past: [...past, present],\n      present: newPresent,\n      future: [],\n    };\n  } else if (action.type === \"CLEAR\") {\n    return {\n      ...initialUseHistoryStateState,\n      present: action.initialPresent,\n    };\n  } else {\n    throw new Error(\"Unsupported action type\");\n  }\n};\n\nexport function useHistoryState(initialPresent = {}) {\n  const initialPresentRef = React.useRef(initialPresent);\n\n  const [state, dispatch] = React.useReducer(useHistoryStateReducer, {\n    ...initialUseHistoryStateState,\n    present: initialPresentRef.current,\n  });\n\n  const canUndo = state.past.length !== 0;\n  const canRedo = state.future.length !== 0;\n\n  const undo = React.useCallback(() => {\n    if (canUndo) {\n      dispatch({ type: \"UNDO\" });\n    }\n  }, [canUndo]);\n\n  const redo = React.useCallback(() => {\n    if (canRedo) {\n      dispatch({ type: \"REDO\" });\n    }\n  }, [canRedo]);\n\n  const set = React.useCallback(\n    (newPresent) => dispatch({ type: \"SET\", newPresent }),\n    []\n  );\n\n  const clear = React.useCallback(\n    () =>\n      dispatch({ type: \"CLEAR\", initialPresent: initialPresentRef.current }),\n    []\n  );\n\n  return { state: state.present, set, undo, redo, clear, canUndo, canRedo };\n}\n\nexport function useHover() {\n  const [hovering, setHovering] = React.useState(false);\n  const previousNode = React.useRef(null);\n\n  const handleMouseEnter = React.useCallback(() => {\n    setHovering(true);\n  }, []);\n\n  const handleMouseLeave = React.useCallback(() => {\n    setHovering(false);\n  }, []);\n\n  const customRef = React.useCallback(\n    (node) => {\n      if (previousNode.current?.nodeType === Node.ELEMENT_NODE) {\n        previousNode.current.removeEventListener(\n          \"mouseenter\",\n          handleMouseEnter\n        );\n        previousNode.current.removeEventListener(\n          \"mouseleave\",\n          handleMouseLeave\n        );\n      }\n\n      if (node?.nodeType === Node.ELEMENT_NODE) {\n        node.addEventListener(\"mouseenter\", handleMouseEnter);\n        node.addEventListener(\"mouseleave\", handleMouseLeave);\n      }\n\n      previousNode.current = node;\n    },\n    [handleMouseEnter, handleMouseLeave]\n  );\n\n  return [customRef, hovering];\n}\n\nexport function useIdle(ms = 1000 * 60) {\n  const [idle, setIdle] = React.useState(false);\n\n  React.useEffect(() => {\n    let timeoutId;\n\n    const handleTimeout = () => {\n      setIdle(true);\n    };\n\n    const handleEvent = throttle((e) => {\n      setIdle(false);\n\n      window.clearTimeout(timeoutId);\n      timeoutId = window.setTimeout(handleTimeout, ms);\n    }, 500);\n\n    const handleVisibilityChange = () => {\n      if (!document.hidden) {\n        handleEvent();\n      }\n    };\n\n    timeoutId = window.setTimeout(handleTimeout, ms);\n\n    window.addEventListener(\"mousemove\", handleEvent);\n    window.addEventListener(\"mousedown\", handleEvent);\n    window.addEventListener(\"resize\", handleEvent);\n    window.addEventListener(\"keydown\", handleEvent);\n    window.addEventListener(\"touchstart\", handleEvent);\n    window.addEventListener(\"wheel\", handleEvent);\n    document.addEventListener(\"visibilitychange\", handleVisibilityChange);\n\n    return () => {\n      window.removeEventListener(\"mousemove\", handleEvent);\n      window.removeEventListener(\"mousedown\", handleEvent);\n      window.removeEventListener(\"resize\", handleEvent);\n      window.removeEventListener(\"keydown\", handleEvent);\n      window.removeEventListener(\"touchstart\", handleEvent);\n      window.removeEventListener(\"wheel\", handleEvent);\n      document.removeEventListener(\"visibilitychange\", handleVisibilityChange);\n      window.clearTimeout(timeoutId);\n    };\n  }, [ms]);\n\n  return idle;\n}\n\nexport function useIntersectionObserver(options = {}) {\n  const { threshold = 1, root = null, rootMargin = \"0px\" } = options;\n  const [entry, setEntry] = React.useState(null);\n\n  const previousObserver = React.useRef(null);\n\n  const customRef = React.useCallback(\n    (node) => {\n      if (previousObserver.current) {\n        previousObserver.current.disconnect();\n        previousObserver.current = null;\n      }\n\n      if (node?.nodeType === Node.ELEMENT_NODE) {\n        const observer = new IntersectionObserver(\n          ([entry]) => {\n            setEntry(entry);\n          },\n          { threshold, root, rootMargin }\n        );\n\n        observer.observe(node);\n        previousObserver.current = observer;\n      }\n    },\n    [threshold, root, rootMargin]\n  );\n\n  return [customRef, entry];\n}\n\nexport function useIsClient() {\n  const [isClient, setIsClient] = React.useState(false);\n\n  React.useEffect(() => {\n    setIsClient(true);\n  }, []);\n\n  return isClient;\n}\n\nexport function useIsFirstRender() {\n  const renderRef = React.useRef(true);\n\n  if (renderRef.current === true) {\n    renderRef.current = false;\n    return true;\n  }\n\n  return renderRef.current;\n}\n\nexport function useList(defaultList = []) {\n  const [list, setList] = React.useState(defaultList);\n\n  const set = React.useCallback((l) => {\n    setList(l);\n  }, []);\n\n  const push = React.useCallback((element) => {\n    setList((l) => [...l, element]);\n  }, []);\n\n  const removeAt = React.useCallback((index) => {\n    setList((l) => [...l.slice(0, index), ...l.slice(index + 1)]);\n  }, []);\n\n  const insertAt = React.useCallback((index, element) => {\n    setList((l) => [...l.slice(0, index), element, ...l.slice(index)]);\n  }, []);\n\n  const updateAt = React.useCallback((index, element) => {\n    setList((l) => l.map((e, i) => (i === index ? element : e)));\n  }, []);\n\n  const clear = React.useCallback(() => setList([]), []);\n\n  return [list, { set, push, removeAt, insertAt, updateAt, clear }];\n}\n\nconst setLocalStorageItem = (key, value) => {\n  const stringifiedValue = JSON.stringify(value);\n  window.localStorage.setItem(key, stringifiedValue);\n  dispatchStorageEvent(key, stringifiedValue);\n};\n\nconst removeLocalStorageItem = (key) => {\n  window.localStorage.removeItem(key);\n  dispatchStorageEvent(key, null);\n};\n\nconst getLocalStorageItem = (key) => {\n  return window.localStorage.getItem(key);\n};\n\nconst useLocalStorageSubscribe = (callback) => {\n  window.addEventListener(\"storage\", callback);\n  return () => window.removeEventListener(\"storage\", callback);\n};\n\nconst getLocalStorageServerSnapshot = () => {\n  throw Error(\"useLocalStorage is a client-only hook\");\n};\n\nexport function useLocalStorage(key, initialValue) {\n  const getSnapshot = () => getLocalStorageItem(key);\n\n  const store = React.useSyncExternalStore(\n    useLocalStorageSubscribe,\n    getSnapshot,\n    getLocalStorageServerSnapshot\n  );\n\n  const setState = React.useCallback(\n    (v) => {\n      try {\n        const nextState = typeof v === \"function\" ? v(JSON.parse(store)) : v;\n\n        if (nextState === undefined || nextState === null) {\n          removeLocalStorageItem(key);\n        } else {\n          setLocalStorageItem(key, nextState);\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    [key, store]\n  );\n\n  React.useEffect(() => {\n    if (\n      getLocalStorageItem(key) === null &&\n      typeof initialValue !== \"undefined\"\n    ) {\n      setLocalStorageItem(key, initialValue);\n    }\n  }, [key, initialValue]);\n\n  return [store ? JSON.parse(store) : initialValue, setState];\n}\n\nexport function useLockBodyScroll() {\n  React.useLayoutEffect(() => {\n    const originalStyle = window.getComputedStyle(document.body).overflow;\n    document.body.style.overflow = \"hidden\";\n    return () => {\n      document.body.style.overflow = originalStyle;\n    };\n  }, []);\n}\n\nexport function useLongPress(callback, options = {}) {\n  const { threshold = 400, onStart, onFinish, onCancel } = options;\n  const isLongPressActive = React.useRef(false);\n  const isPressed = React.useRef(false);\n  const timerId = React.useRef();\n\n  return React.useMemo(() => {\n    if (typeof callback !== \"function\") {\n      return {};\n    }\n\n    const start = (event) => {\n      if (!isMouseEvent(event) && !isTouchEvent(event)) return;\n\n      if (onStart) {\n        onStart(event);\n      }\n\n      isPressed.current = true;\n      timerId.current = setTimeout(() => {\n        callback(event);\n        isLongPressActive.current = true;\n      }, threshold);\n    };\n\n    const cancel = (event) => {\n      if (!isMouseEvent(event) && !isTouchEvent(event)) return;\n\n      if (isLongPressActive.current) {\n        if (onFinish) {\n          onFinish(event);\n        }\n      } else if (isPressed.current) {\n        if (onCancel) {\n          onCancel(event);\n        }\n      }\n\n      isLongPressActive.current = false;\n      isPressed.current = false;\n\n      if (timerId.current) {\n        window.clearTimeout(timerId.current);\n      }\n    };\n\n    const mouseHandlers = {\n      onMouseDown: start,\n      onMouseUp: cancel,\n      onMouseLeave: cancel,\n    };\n\n    const touchHandlers = {\n      onTouchStart: start,\n      onTouchEnd: cancel,\n    };\n\n    return {\n      ...mouseHandlers,\n      ...touchHandlers,\n    };\n  }, [callback, threshold, onCancel, onFinish, onStart]);\n}\n\nexport function useMap(initialState) {\n  const mapRef = React.useRef(new Map(initialState));\n  const [, reRender] = React.useReducer((x) => x + 1, 0);\n\n  mapRef.current.set = (...args) => {\n    Map.prototype.set.apply(mapRef.current, args);\n    reRender();\n    return mapRef.current;\n  };\n\n  mapRef.current.clear = (...args) => {\n    Map.prototype.clear.apply(mapRef.current, args);\n    reRender();\n  };\n\n  mapRef.current.delete = (...args) => {\n    const res = Map.prototype.delete.apply(mapRef.current, args);\n    reRender();\n\n    return res;\n  };\n\n  return mapRef.current;\n}\n\nexport function useMeasure() {\n  const [dimensions, setDimensions] = React.useState({\n    width: null,\n    height: null,\n  });\n\n  const previousObserver = React.useRef(null);\n\n  const customRef = React.useCallback((node) => {\n    if (previousObserver.current) {\n      previousObserver.current.disconnect();\n      previousObserver.current = null;\n    }\n\n    if (node?.nodeType === Node.ELEMENT_NODE) {\n      const observer = new ResizeObserver(([entry]) => {\n        if (entry && entry.borderBoxSize) {\n          const { inlineSize: width, blockSize: height } =\n            entry.borderBoxSize[0];\n\n          setDimensions({ width, height });\n        }\n      });\n\n      observer.observe(node);\n      previousObserver.current = observer;\n    }\n  }, []);\n\n  return [customRef, dimensions];\n}\n\nexport function useMediaQuery(query) {\n  const subscribe = React.useCallback(\n    (callback) => {\n      const matchMedia = window.matchMedia(query);\n\n      matchMedia.addEventListener(\"change\", callback);\n      return () => {\n        matchMedia.removeEventListener(\"change\", callback);\n      };\n    },\n    [query]\n  );\n\n  const getSnapshot = () => {\n    return window.matchMedia(query).matches;\n  };\n\n  const getServerSnapshot = () => {\n    throw Error(\"useMediaQuery is a client-only hook\");\n  };\n\n  return React.useSyncExternalStore(subscribe, getSnapshot, getServerSnapshot);\n}\n\nexport function useMouse() {\n  const [state, setState] = React.useState({\n    x: 0,\n    y: 0,\n    elementX: 0,\n    elementY: 0,\n    elementPositionX: 0,\n    elementPositionY: 0,\n  });\n\n  const ref = React.useRef(null);\n\n  React.useLayoutEffect(() => {\n    const handleMouseMove = (event) => {\n      let newState = {\n        x: event.pageX,\n        y: event.pageY,\n      };\n\n      if (ref.current?.nodeType === Node.ELEMENT_NODE) {\n        const { left, top } = ref.current.getBoundingClientRect();\n        const elementPositionX = left + window.scrollX;\n        const elementPositionY = top + window.scrollY;\n        const elementX = event.pageX - elementPositionX;\n        const elementY = event.pageY - elementPositionY;\n\n        newState.elementX = elementX;\n        newState.elementY = elementY;\n        newState.elementPositionX = elementPositionX;\n        newState.elementPositionY = elementPositionY;\n      }\n\n      setState((s) => {\n        return {\n          ...s,\n          ...newState,\n        };\n      });\n    };\n\n    document.addEventListener(\"mousemove\", handleMouseMove);\n\n    return () => {\n      document.removeEventListener(\"mousemove\", handleMouseMove);\n    };\n  }, []);\n\n  return [state, ref];\n}\n\nconst getConnection = () => {\n  return (\n    navigator?.connection ||\n    navigator?.mozConnection ||\n    navigator?.webkitConnection\n  );\n};\n\nconst useNetworkStateSubscribe = (callback) => {\n  window.addEventListener(\"online\", callback, { passive: true });\n  window.addEventListener(\"offline\", callback, { passive: true });\n\n  const connection = getConnection();\n\n  if (connection) {\n    connection.addEventListener(\"change\", callback, { passive: true });\n  }\n\n  return () => {\n    window.removeEventListener(\"online\", callback);\n    window.removeEventListener(\"offline\", callback);\n\n    if (connection) {\n      connection.removeEventListener(\"change\", callback);\n    }\n  };\n};\n\nconst getNetworkStateServerSnapshot = () => {\n  throw Error(\"useNetworkState is a client-only hook\");\n};\n\nexport function useNetworkState() {\n  const cache = React.useRef({});\n\n  const getSnapshot = () => {\n    const online = navigator.onLine;\n    const connection = getConnection();\n\n    const nextState = {\n      online,\n      downlink: connection?.downlink,\n      downlinkMax: connection?.downlinkMax,\n      effectiveType: connection?.effectiveType,\n      rtt: connection?.rtt,\n      saveData: connection?.saveData,\n      type: connection?.type,\n    };\n\n    if (isShallowEqual(cache.current, nextState)) {\n      return cache.current;\n    } else {\n      cache.current = nextState;\n      return nextState;\n    }\n  };\n\n  return React.useSyncExternalStore(\n    useNetworkStateSubscribe,\n    getSnapshot,\n    getNetworkStateServerSnapshot\n  );\n}\n\nexport function useObjectState(initialValue) {\n  const [state, setState] = React.useState(initialValue);\n\n  const handleUpdate = React.useCallback((arg) => {\n    if (typeof arg === \"function\") {\n      setState((s) => {\n        const newState = arg(s);\n\n        if (isPlainObject(newState)) {\n          return {\n            ...s,\n            ...newState,\n          };\n        }\n      });\n    }\n\n    if (isPlainObject(arg)) {\n      setState((s) => ({\n        ...s,\n        ...arg,\n      }));\n    }\n  }, []);\n\n  return [state, handleUpdate];\n}\n\nexport function useOrientation() {\n  const [orientation, setOrientation] = React.useState({\n    angle: 0,\n    type: \"landscape-primary\",\n  });\n\n  React.useLayoutEffect(() => {\n    const handleChange = () => {\n      const { angle, type } = window.screen.orientation;\n      setOrientation({\n        angle,\n        type,\n      });\n    };\n\n    const handle_orientationchange = () => {\n      setOrientation({\n        type: \"UNKNOWN\",\n        angle: window.orientation,\n      });\n    };\n\n    if (window.screen?.orientation) {\n      handleChange();\n      window.screen.orientation.addEventListener(\"change\", handleChange);\n    } else {\n      handle_orientationchange();\n      window.addEventListener(\"orientationchange\", handle_orientationchange);\n    }\n\n    return () => {\n      if (window.screen?.orientation) {\n        window.screen.orientation.removeEventListener(\"change\", handleChange);\n      } else {\n        window.removeEventListener(\n          \"orientationchange\",\n          handle_orientationchange\n        );\n      }\n    };\n  }, []);\n\n  return orientation;\n}\n\nconst usePreferredLanguageSubscribe = (cb) => {\n  window.addEventListener(\"languagechange\", cb);\n  return () => window.removeEventListener(\"languagechange\", cb);\n};\n\nconst getPreferredLanguageSnapshot = () => {\n  return navigator.language;\n};\n\nconst getPreferredLanguageServerSnapshot = () => {\n  throw Error(\"usePreferredLanguage is a client-only hook\");\n};\n\nexport function usePreferredLanguage() {\n  return React.useSyncExternalStore(\n    usePreferredLanguageSubscribe,\n    getPreferredLanguageSnapshot,\n    getPreferredLanguageServerSnapshot\n  );\n}\n\nexport function usePrevious(value) {\n  const [current, setCurrent] = React.useState(value);\n  const [previous, setPrevious] = React.useState(null);\n\n  if (value !== current) {\n    setPrevious(current);\n    setCurrent(value);\n  }\n\n  return previous;\n}\n\nexport function useQueue(initialValue = []) {\n  const [queue, setQueue] = React.useState(initialValue);\n\n  const add = React.useCallback((element) => {\n    setQueue((q) => [...q, element]);\n  }, []);\n\n  const remove = React.useCallback(() => {\n    let removedElement;\n\n    setQueue(([first, ...q]) => {\n      removedElement = first;\n      return q;\n    });\n\n    return removedElement;\n  }, []);\n\n  const clear = React.useCallback(() => {\n    setQueue([]);\n  }, []);\n\n  return {\n    add,\n    remove,\n    clear,\n    first: queue[0],\n    last: queue[queue.length - 1],\n    size: queue.length,\n    queue,\n  };\n}\n\nexport function useRenderCount() {\n  const count = React.useRef(0);\n\n  count.current++;\n\n  return count.current;\n}\n\nexport function useRenderInfo(name = \"Unknown\") {\n  const count = React.useRef(0);\n  const lastRender = React.useRef();\n  const now = Date.now();\n\n  count.current++;\n\n  React.useEffect(() => {\n    lastRender.current = Date.now();\n  });\n\n  const sinceLastRender = lastRender.current ? now - lastRender.current : 0;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    const info = {\n      name,\n      renders: count.current,\n      sinceLastRender,\n      timestamp: now,\n    };\n\n    console.log(info);\n\n    return info;\n  }\n}\n\nexport function useScript(src, options = {}) {\n  const [status, setStatus] = React.useState(\"loading\");\n  const optionsRef = React.useRef(options);\n\n  React.useEffect(() => {\n    let script = document.querySelector(`script[src=\"${src}\"]`);\n\n    const domStatus = script?.getAttribute(\"data-status\");\n    if (domStatus) {\n      setStatus(domStatus);\n      return;\n    }\n\n    if (script === null) {\n      script = document.createElement(\"script\");\n      script.src = src;\n      script.async = true;\n      script.setAttribute(\"data-status\", \"loading\");\n      document.body.appendChild(script);\n\n      const handleScriptLoad = () => {\n        script.setAttribute(\"data-status\", \"ready\");\n        setStatus(\"ready\");\n        removeEventListeners();\n      };\n\n      const handleScriptError = () => {\n        script.setAttribute(\"data-status\", \"error\");\n        setStatus(\"error\");\n        removeEventListeners();\n      };\n\n      const removeEventListeners = () => {\n        script.removeEventListener(\"load\", handleScriptLoad);\n        script.removeEventListener(\"error\", handleScriptError);\n      };\n\n      script.addEventListener(\"load\", handleScriptLoad);\n      script.addEventListener(\"error\", handleScriptError);\n\n      const removeOnUnmount = optionsRef.current.removeOnUnmount;\n\n      return () => {\n        if (removeOnUnmount === true) {\n          script.remove();\n          removeEventListeners();\n        }\n      };\n    } else {\n      setStatus(\"unknown\");\n    }\n  }, [src]);\n\n  return status;\n}\n\nconst setSessionStorageItem = (key, value) => {\n  const stringifiedValue = JSON.stringify(value);\n  window.sessionStorage.setItem(key, stringifiedValue);\n  dispatchStorageEvent(key, stringifiedValue);\n};\n\nconst removeSessionStorageItem = (key) => {\n  window.sessionStorage.removeItem(key);\n  dispatchStorageEvent(key, null);\n};\n\nconst getSessionStorageItem = (key) => {\n  return window.sessionStorage.getItem(key);\n};\n\nconst useSessionStorageSubscribe = (callback) => {\n  window.addEventListener(\"storage\", callback);\n  return () => window.removeEventListener(\"storage\", callback);\n};\n\nconst getSessionStorageServerSnapshot = () => {\n  throw Error(\"useSessionStorage is a client-only hook\");\n};\n\nexport function useSessionStorage(key, initialValue) {\n  const getSnapshot = () => getSessionStorageItem(key);\n\n  const store = React.useSyncExternalStore(\n    useSessionStorageSubscribe,\n    getSnapshot,\n    getSessionStorageServerSnapshot\n  );\n\n  const setState = React.useCallback(\n    (v) => {\n      try {\n        const nextState = typeof v === \"function\" ? v(JSON.parse(store)) : v;\n\n        if (nextState === undefined || nextState === null) {\n          removeSessionStorageItem(key);\n        } else {\n          setSessionStorageItem(key, nextState);\n        }\n      } catch (e) {\n        console.warn(e);\n      }\n    },\n    [key, store]\n  );\n\n  React.useEffect(() => {\n    if (\n      getSessionStorageItem(key) === null &&\n      typeof initialValue !== \"undefined\"\n    ) {\n      setSessionStorageItem(key, initialValue);\n    }\n  }, [key, initialValue]);\n\n  return [store ? JSON.parse(store) : initialValue, setState];\n}\n\nexport function useSet(values) {\n  const setRef = React.useRef(new Set(values));\n  const [, reRender] = React.useReducer((x) => x + 1, 0);\n\n  setRef.current.add = (...args) => {\n    const res = Set.prototype.add.apply(setRef.current, args);\n    reRender();\n\n    return res;\n  };\n\n  setRef.current.clear = (...args) => {\n    Set.prototype.clear.apply(setRef.current, args);\n    reRender();\n  };\n\n  setRef.current.delete = (...args) => {\n    const res = Set.prototype.delete.apply(setRef.current, args);\n    reRender();\n\n    return res;\n  };\n\n  return setRef.current;\n}\n\nexport function useThrottle(value, interval = 500) {\n  const [throttledValue, setThrottledValue] = React.useState(value);\n  const lastUpdated = React.useRef(null);\n\n  React.useEffect(() => {\n    const now = Date.now();\n\n    if (lastUpdated.current && now >= lastUpdated.current + interval) {\n      lastUpdated.current = now;\n      setThrottledValue(value);\n    } else {\n      const id = window.setTimeout(() => {\n        lastUpdated.current = now;\n        setThrottledValue(value);\n      }, interval);\n\n      return () => window.clearTimeout(id);\n    }\n  }, [value, interval]);\n\n  return throttledValue;\n}\n\nexport function useToggle(initialValue) {\n  const [on, setOn] = React.useState(() => {\n    if (typeof initialValue === \"boolean\") {\n      return initialValue;\n    }\n\n    return Boolean(initialValue);\n  });\n\n  const handleToggle = React.useCallback((value) => {\n    if (typeof value === \"boolean\") {\n      return setOn(value);\n    }\n\n    return setOn((v) => !v);\n  }, []);\n\n  return [on, handleToggle];\n}\n\nconst useVisibilityChangeSubscribe = (callback) => {\n  document.addEventListener(\"visibilitychange\", callback);\n\n  return () => {\n    document.removeEventListener(\"visibilitychange\", callback);\n  };\n};\n\nconst getVisibilityChangeSnapshot = () => {\n  return document.visibilityState;\n};\n\nconst getVisibilityChangeServerSnapshot = () => {\n  throw Error(\"useVisibilityChange is a client-only hook\");\n};\n\nexport function useVisibilityChange() {\n  const visibilityState = React.useSyncExternalStore(\n    useVisibilityChangeSubscribe,\n    getVisibilityChangeSnapshot,\n    getVisibilityChangeServerSnapshot\n  );\n\n  return visibilityState === \"visible\";\n}\n\nexport function useWindowScroll() {\n  const [state, setState] = React.useState({\n    x: null,\n    y: null,\n  });\n\n  const scrollTo = React.useCallback((...args) => {\n    if (typeof args[0] === \"object\") {\n      window.scrollTo(args[0]);\n    } else if (typeof args[0] === \"number\" && typeof args[1] === \"number\") {\n      window.scrollTo(args[0], args[1]);\n    } else {\n      throw new Error(\n        `Invalid arguments passed to scrollTo. See here for more info. https://developer.mozilla.org/en-US/docs/Web/API/Window/scrollTo`\n      );\n    }\n  }, []);\n\n  React.useLayoutEffect(() => {\n    const handleScroll = () => {\n      setState({ x: window.scrollX, y: window.scrollY });\n    };\n\n    handleScroll();\n    window.addEventListener(\"scroll\", handleScroll);\n\n    return () => {\n      window.removeEventListener(\"scroll\", handleScroll);\n    };\n  }, []);\n\n  return [state, scrollTo];\n}\n\nexport function useWindowSize() {\n  const [size, setSize] = React.useState({\n    width: null,\n    height: null,\n  });\n\n  React.useLayoutEffect(() => {\n    const handleResize = () => {\n      setSize({\n        width: window.innerWidth,\n        height: window.innerHeight,\n      });\n    };\n\n    handleResize();\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, []);\n\n  return size;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"firstTitle\":\"University_firstTitle__k9geC\",\"mainContent\":\"University_mainContent__ZNCWW\",\"tutorsSection\":\"University_tutorsSection__wxwYf\",\"tutorsHeaderContainer\":\"University_tutorsHeaderContainer__GgrCw\",\"tutorsImg\":\"University_tutorsImg__mzFSn\",\"tutorsHeader\":\"University_tutorsHeader__GiEc6\"};","import React from 'react';\nimport University from 'components/main/University';\n// import React, { useRef } from 'react';\n\nimport TutorsList from 'components/main/TutorsList/TutorsList';\nimport imageTutors from '../../images/imageTutors.png';\n\nimport styles from './University.module.css';\n\nexport default function UniversitiesPage() {\n  // const isTrueRef = useRef(true);\n  // console.log(isTrueRef);\n\n  // const inputRef = useRef(null);\n  // console.log(inputRef);\n\n  // function changeIsTrueRef() {\n  //   if (!isTrueRef?.current) {\n  //     return false;\n  //   }\n\n  //   isTrueRef.current = false;\n  // }\n\n  return (\n    <>\n      {/* <input id=\"inputForRef\" ref={inputRef} />\n      <button onClick={() => changeIsTrueRef()}> Toggle Value </button> */}\n\n      <p className={styles.firstTitle}>university information</p>\n      <div className={styles.mainContent}>\n        <University />\n        <section className={styles.tutorsSection}>\n          <div className={styles.tutorsHeaderContainer}>\n            <img className={styles.tutorsImg} src={imageTutors} alt=\"Fox\" />\n            <h2 className={styles.tutorsHeader}>tutors</h2>\n          </div>\n          <TutorsList />\n        </section>\n      </div>\n    </>\n  );\n}\n"],"names":["_ref","isModalVisible","handleModalClose","handleChange","handleSave","dialogRef","contRef","label","name","value","_jsx","ref","className","styles","children","_jsxs","id","onClick","HiX","size","src","alt","Input","type","required","Button","handleClick","disabled","variant","message","handleEdit","handleDelete","Paper","clsx","HiPencilAlt","HiTrash","isDeleteModalVisible","handleDeleteModalClose","handleDeleteYes","handleDeleteNo","dialogDeleteRef","contDeleteRef","infoName","onDelete","onEdit","divClassName","_useToggle","useToggle","_useToggle2","_slicedToArray","isMenuVisible","toggleMenu","_useState","useState","_useState2","isEditModalVisible","setIsEditModalVisible","_useState3","_useState4","setIsDeleteModalVisible","_useState5","_useState6","newName","setNewName","dispatch","useDispatch","useEffect","handleClickOutside","event","target","current","document","body","addEventListener","key","removeEventListener","handleToggle","_Fragment","DeleteModal","Modal","e","BsThreeDotsVertical","MenuBlock","onChange","defaultValue","htmlFor","style","Vortex","visible","height","width","ariaLabel","wrapperStyle","wrapperClass","colors","setIsModalVisible","useRef","handleKeyDown","item","concat","firstName","lastName","HiDeviceMobile","phone","HiMail","email","HiLocationMarker","city","options","isFormVisible","toggleForm","setIsDisabled","newCity","setNewCity","allCities","useSelector","getCities","map","InfoItemBlock","deleteCity","editCity","onSubmit","ev","preventDefault","addCity","reset","_ev$target","length","_defineProperty","HiPlus","INITIAL_FORM_VALUE","description","history","_objectSpread","newFaculty","setNewfaculty","location","useLocation","allFaculties","selectFaculties","loadingThunk","selectFacultiestLoading","errorThunk","selectFacultiesError","handleAddButtonChange","console","log","Loading","Alert","faculty","deleteFaculty","editFaculty","Link","to","state","from","form","addFaculty","axios","searchTherm","setSearchTherm","debouncedSearchTerm","delay","_React$useState7","React","_React$useState8","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","newTutor","setNewTutor","tutorsThunk","getTutors","LoadingThunk","getLoading","getError","getTutorsBySearchTherm","filter","tutor","surName","toLowerCase","includes","_delTutor","_asyncToGenerator","_regeneratorRuntime","_callee","_context","prev","next","abrupt","deleteTutor","stop","apply","arguments","TutorItem","_x","delTutor","addTutor","surname","pattern","title","_ev$target2","Cities","Faculties","UniversitiesPage","University","TutorsList"],"sourceRoot":""}